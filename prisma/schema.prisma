// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
    @@map("account")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@map("session")
}

enum Role {
    USER
    ADMIN
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Role      @default(USER)

    @@map("user")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verification_token")
}

enum OriginSite {
    V2EX
    ELE_DUCK
}

model Job {
    id               String     @id @default(cuid())
    originId         String
    originUrl        String
    originSite       OriginSite
    originTitle      String
    originContent    String?    @db.Text
    originCreateAt   DateTime?
    originUsername   String?
    originUserAvatar String?
    syncAt           DateTime   @default(now())
    invalid          Boolean    @default(false)

    title            String?
    tags             String[]
    generatedContent String?   @db.Text
    generatedAt      DateTime?

    showCount Int @default(0)

    @@unique([originId, originSite])
    @@map("job")
}
